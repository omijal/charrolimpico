env:
  RUBY_VERSION: 2.7.1

name: CI build
on: [push]
jobs:
  dockerbuild:
    name: Build Dockerfile
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master' # Running this job only for develop branch
    steps:
      - uses: actions/checkout@v2 # Checking out the repo
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Build and Publish head Docker image
        uses: VaultVulp/gp-docker-action@1.1.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
          image-name: ${{ github.event.repository.name }} # Provide Docker image name
          image-tag: ${{ steps.extract_branch.outputs.branch }} # Provide Docker image tag
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: dockerbuild
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker-practice/actions-setup-docker@0.0.1
      - uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Build docker image
        run: docker build -t unit -f Dockerfile.unit --build-arg TAG=${{ steps.extract_branch.outputs.branch }} --build-arg REPO=${{ github.event.repository.name }} --build-arg OWNER=${{ github.repository_owner }} .
      - name: Run the validations
        run: docker run -v `pwd`/test:/app/test -v `pwd`/.git:/app/.git -v `pwd`/coverage:/app/coverage unit
      - name: Publish build reports
        uses: actions/upload-artifact@v2
        with:
          name: build-reports
          path: coverage # or path/to/artifact
